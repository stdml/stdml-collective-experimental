#!/bin/sh
set -e

# defaults
VERBOSE=0

. ./auto/cmake

parse_args() {
    for i in "$@"; do
        case $i in
        --prefix=*)
            PREFIX="${i#*=}"
            ;;
        --verbose)
            VERBOSE=1
            ;;
        --quiet)
            QUIET=1
            ;;
        --tests)
            BUILD_TESTS=1
            ;;
        --trace)
            ENABLE_TRACE=1
            ;;
        --mpi)
            HAVE_MPI=1
            ;;
        --shared)
            BUILD_SHARED=1
            ;;
        --disable-cxx11-abi)
            DISABLE_CXX11_ABI=1
            ;;
        --release=*)
            RELEASE="${i#*=}"
            ;;
        --deb)
            BUILD_DEB=1
            ;;
        *)
            echo "unknown argument $i"
            exit 1
            ;;
        esac
    done
}

add_cmake_prefixes() {
    add_cmake_prefix $HOME/local
}

add_cmake_flags() {
    pass_cmake_flag_from_env CMAKE_INSTALL_PREFIX PREFIX

    add_cmake_flag EXECUTABLE_OUTPUT_PATH $PWD/bin
    add_cmake_flag LIBRARY_OUTPUT_PATH $PWD/lib
    add_cmake_flag CMAKE_BUILD_TYPE Release

    if [ "$ENABLE_TRACE" = 1 ]; then
        pass_cmake_flag_from_env STDTRACER_GIT_URL
        add_cmake_flag STDTRACER_GIT_TAG timeline
        add_cmake_flag ENABLE_TRACE $ENABLE_TRACE
    fi

    if [ "$BUILD_DEB" = 1 ]; then
        add_cmake_flag BUILD_DEB $BUILD_DEB
        add_cmake_flag CPACK_PACKAGE_VERSION $RELEASE
    fi

    add_cmake_flag BUILD_SHARED $BUILD_SHARED
    add_cmake_flag DISABLE_CXX11_ABI $DISABLE_CXX11_ABI
    add_cmake_flag HAVE_MPI $HAVE_MPI

    add_cmake_flag CMAKE_EXPORT_COMPILE_COMMANDS ${VERBOSE}
    add_cmake_flag CMAKE_VERBOSE_MAKEFILE ${VERBOSE}
}

main() {
    export CXX=$(which g++-10)
    export CC=$(which gcc-10)
    parse_args $@
    config_cmake
}

main $@
